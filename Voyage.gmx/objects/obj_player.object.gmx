<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_walking_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>lastKey = 1;
vine = false;
size = 150;
emitter = 1;

// Movement
grav = 1;
hsp = 0;
vsp = 0;
movespeed = 5;
friction = .2

// Jumping
jumpMax = 40;
jumpSpeed = 0;
jumpCharge = 20;

// Hunger
food = 70;
maxFood = 100;
foodTimer = 1800;   // 60 seconds

torchAmount = 10;

walkSound = 20;

clickCount = 0;

scr_torch();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_subtract);
surface_set_target(light);
draw_circle_colour(x - view_xview[0], y - view_yview[0], size, c_gray, c_black, false);
surface_reset_target();
draw_set_blend_mode(bm_normal);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.pause)
    exit;    
    
jumpMax = 20 + (20 * (food / 100));
if(keyboard_check(vk_space) &amp;&amp; ((place_meeting(x, y+1, obj_wall) || place_meeting(x, y+1, obj_mud)) || vine == true))
{
    image_speed = 0;
    jumpCharge += 1;
    
    if(jumpCharge &gt; jumpMax)
        jumpCharge = jumpMax;                         
}

if(keyboard_check_released(vk_space))
{
    jumpSpeed = jumpCharge div 2;    
    jumpCharge = 20;  
}



if(room_get_name(room) == "rm_mud_5" || room_get_name(room) == "rm_mud_6")
    scr_player_movement_mud();
else
    scr_player_movement();

if(emitter == 1)
{
    if(sprite_index == spr_player_torch_right || (sprite_index == spr_player_jump_torch &amp;&amp; image_index == 0))
    {
        part_emitter_region(global.ps, global.pe, x+27, x+29, y-10, y-11, ps_shape_rectangle, ps_distr_linear);
        part_emitter_burst(global.ps, global.pe, global.pt, 1);
    }

    else
    {
        part_emitter_region(global.ps, global.pe, x-27, x-29, y-10, y-11, ps_shape_rectangle, ps_distr_linear);
        part_emitter_burst(global.ps, global.pe, global.pt, 1);
    }
}

if(place_meeting(x, y+1, obj_wall) &amp;&amp; hsp != 0)
{
    walkSound--;
    
    if(walkSound &lt; 0)
    {
        audio_play_sound(snd_walk, 5, false)
        walkSound = 20;
    }
}

if(foodTimer &lt;= 0)
{
    food -= 10;
    if(food &lt;= 0)
        food = 0;
    if(food &gt; 100)
        food = 100;
        
    foodTimer = 1800;
}
else
    foodTimer--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_draw_gui();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = 100;
draw_set_alpha(1);

if(room_get_name(room) == "rm_maze_8")
    draw_background_tiled(bck_underground, 0, 0);
else
{
    draw_background(bck_main_dark, view_xview[0], view_yview[0]);
    draw_background_tiled(bck_main_far_dark, view_xview[0] * .7, view_yview[0]);
    draw_background_tiled(bck_main_close_dark, view_xview[0] * .4, view_yview[0]);
}

// Draws line from click to let-go
if(mouse_check_button(mb_left) &amp;&amp; torchAmount &gt; 0)
{
    if(clickCount == 0)
    {
        x1 = mouse_x;
        y1 = mouse_y;
        clickCount = 1;
    }
    
    x2 = mouse_x;
    y2 = mouse_y;
    draw_line_width_colour(x1,y1,x2,y2,2,c_white,c_white);
}

// Create torch instance when let-go
if(mouse_check_button_released(mb_left))
{
    horizontal = x1 - x2;
    vertical = y1 - y2;
    
    torchH = .1 * horizontal;
    torchV = .1 * vertical;
    
    if(torchH &gt; 20)
        torchH = 20;
    if(torchV &gt; 20)
        torchV = 20;
        
    if(torchAmount &gt; 0)
    {
        instance_create(obj_player.x, obj_player.y, obj_torch);
        torchAmount--;
    }
    // Resets x1 and y1
    clickCount = 0;
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
