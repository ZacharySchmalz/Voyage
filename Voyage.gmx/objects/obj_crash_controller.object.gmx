<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(-200, room_height - 300, obj_player_static);
backgroundAlpha = 0;
nextRoom = 150;

// Drawing tutorial text
tut = 0;
duration = 150;
index = 0;
stop = 0;
text[0] = "Use WASD for movement";
text[1] = "Press and hold SPACE to jump";
text[2] = "Press E on highlighted items";
text[3] = "Click and drag MOUSE to throw";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(backgroundAlpha == 1)
{
    backgroundAlpha = 1;
    
    with(obj_player_static)
        hspeed = 2.5;
}

if(obj_player_static.x &gt; 3500)
{
    with(obj_player_static)
    {
        hspeed = 0;
        image_index = 0;
    }
        
    if(instance_exists(obj_fire_crash))
    {
        if( ! instance_exists(obj_fade_to_white))
        {
            with(obj_fire_crash)
            {
                if(image_alpha &gt; .5) 
                instance_create(0, 0, obj_fade_to_white);
            }       
        }
            
        else
        {
            if(obj_fade_to_white.image_alpha == 1)
            {
                nextRoom--;
            
                if(nextRoom == 0)
                {
                    instance_create(0, 0, obj_fade_to_black);
                }
            
                if(instance_exists(obj_fade_to_black))
                {
                    if(obj_fade_to_black.image_alpha == 1)
                        room_goto(rm_jump_1);
                }
                    
            }
        }
    }
    
    else
    {
        instance_create(view_xview[0] -50, view_yview[0] + 100, obj_fire_crash);
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>backgroundAlpha += .002;
draw_set_alpha(backgroundAlpha);

depth = 200
with(obj_fire_crash)
    draw_self();

depth = 100
draw_background(bck_main_light, view_xview[0], 0);
draw_background_tiled(bck_main_far_light, view_xview[0] * .7, 0);
draw_background_tiled(bck_main_close_light, view_xview[0] * .4, 0);


draw_set_font(fnt_nasa);
draw_set_colour(c_white);

if(obj_player_static.x  &gt; 750 &amp;&amp; stop == 0)
{
    tut += .02;
    if(tut &gt;= 1)
    {
        tut = 1;
        duration--;
    }
        
    draw_set_alpha(tut)
    draw_text(obj_player_static.x, room_height / 2, text[index]);
    

    if(duration &lt;= 0)
    {
        duration = 0;
        tut -= .04;
        
        if(tut == .02)
        {
            duration = 150;
            tut = 0;  
            index++;
            
            if(index == 4) 
                stop = 1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
